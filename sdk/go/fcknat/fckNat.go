// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fcknat

import (
	"context"
	"reflect"

	"errors"
	"example.com/pulumi-fcknat/sdk/go/fcknat/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FckNat struct {
	pulumi.ResourceState

	AutoScalingGroupArn   pulumi.StringOutput `pulumi:"autoScalingGroupArn"`
	IamInstanceProfileArn pulumi.StringOutput `pulumi:"iamInstanceProfileArn"`
	IamRoleArn            pulumi.StringOutput `pulumi:"iamRoleArn"`
	InstanceId            pulumi.StringOutput `pulumi:"instanceId"`
	NetworkInterfaceId    pulumi.StringOutput `pulumi:"networkInterfaceId"`
	PrivateIp             pulumi.StringOutput `pulumi:"privateIp"`
	PublicDns             pulumi.StringOutput `pulumi:"publicDns"`
	PublicIp              pulumi.StringOutput `pulumi:"publicIp"`
	SecurityGroupId       pulumi.StringOutput `pulumi:"securityGroupId"`
}

// NewFckNat registers a new resource with the given unique name, arguments, and options.
func NewFckNat(ctx *pulumi.Context,
	name string, args *FckNatArgs, opts ...pulumi.ResourceOption) (*FckNat, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.SubnetId == nil {
		return nil, errors.New("invalid value for required argument 'SubnetId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FckNat
	err := ctx.RegisterRemoteComponentResource("fcknat:index:FckNat", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type fckNatArgs struct {
	AdditionalSecurityGroupIds                     []string               `pulumi:"additionalSecurityGroupIds"`
	AmiId                                          *string                `pulumi:"amiId"`
	AttachSsmPolicy                                *bool                  `pulumi:"attachSsmPolicy"`
	CloudwatchAgentConfigurationArnParam           *string                `pulumi:"cloudwatchAgentConfigurationArnParam"`
	CloudwatchAgentConfigurationCollectionInterval *int                   `pulumi:"cloudwatchAgentConfigurationCollectionInterval"`
	CloudwatchAgentConfigurationEndpointOverride   *string                `pulumi:"cloudwatchAgentConfigurationEndpointOverride"`
	CloudwatchAgentConfigurationNamespace          *string                `pulumi:"cloudwatchAgentConfigurationNamespace"`
	EbsRootVolumeSize                              *int                   `pulumi:"ebsRootVolumeSize"`
	EipAllocationIds                               []string               `pulumi:"eipAllocationIds"`
	Encryption                                     *bool                  `pulumi:"encryption"`
	HaMode                                         *bool                  `pulumi:"haMode"`
	InstanceType                                   *string                `pulumi:"instanceType"`
	KmsKeyId                                       *string                `pulumi:"kmsKeyId"`
	Name                                           string                 `pulumi:"name"`
	RouteTableIds                                  map[string]interface{} `pulumi:"routeTableIds"`
	SshCidrBlocksIpv4                              []string               `pulumi:"sshCidrBlocksIpv4"`
	SshCidrBlocksIpv6                              []string               `pulumi:"sshCidrBlocksIpv6"`
	SshKeyName                                     *string                `pulumi:"sshKeyName"`
	SubnetId                                       string                 `pulumi:"subnetId"`
	Tags                                           map[string]interface{} `pulumi:"tags"`
	UpdateRouteTables                              *bool                  `pulumi:"updateRouteTables"`
	UseCloudwatchAgent                             *bool                  `pulumi:"useCloudwatchAgent"`
	UseDefaultSecurityGroup                        *bool                  `pulumi:"useDefaultSecurityGroup"`
	UseSpotInstances                               *bool                  `pulumi:"useSpotInstances"`
	UseSsh                                         *bool                  `pulumi:"useSsh"`
	VpcId                                          string                 `pulumi:"vpcId"`
}

// The set of arguments for constructing a FckNat resource.
type FckNatArgs struct {
	AdditionalSecurityGroupIds                     pulumi.StringArrayInput
	AmiId                                          pulumi.StringPtrInput
	AttachSsmPolicy                                pulumi.BoolPtrInput
	CloudwatchAgentConfigurationArnParam           pulumi.StringPtrInput
	CloudwatchAgentConfigurationCollectionInterval pulumi.IntPtrInput
	CloudwatchAgentConfigurationEndpointOverride   pulumi.StringPtrInput
	CloudwatchAgentConfigurationNamespace          pulumi.StringPtrInput
	EbsRootVolumeSize                              pulumi.IntPtrInput
	EipAllocationIds                               pulumi.StringArrayInput
	Encryption                                     pulumi.BoolPtrInput
	HaMode                                         pulumi.BoolPtrInput
	InstanceType                                   pulumi.StringPtrInput
	KmsKeyId                                       pulumi.StringPtrInput
	Name                                           pulumi.StringInput
	RouteTableIds                                  pulumi.MapInput
	SshCidrBlocksIpv4                              pulumi.StringArrayInput
	SshCidrBlocksIpv6                              pulumi.StringArrayInput
	SshKeyName                                     pulumi.StringPtrInput
	SubnetId                                       pulumi.StringInput
	Tags                                           pulumi.MapInput
	UpdateRouteTables                              pulumi.BoolPtrInput
	UseCloudwatchAgent                             pulumi.BoolPtrInput
	UseDefaultSecurityGroup                        pulumi.BoolPtrInput
	UseSpotInstances                               pulumi.BoolPtrInput
	UseSsh                                         pulumi.BoolPtrInput
	VpcId                                          pulumi.StringInput
}

func (FckNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fckNatArgs)(nil)).Elem()
}

type FckNatInput interface {
	pulumi.Input

	ToFckNatOutput() FckNatOutput
	ToFckNatOutputWithContext(ctx context.Context) FckNatOutput
}

func (*FckNat) ElementType() reflect.Type {
	return reflect.TypeOf((**FckNat)(nil)).Elem()
}

func (i *FckNat) ToFckNatOutput() FckNatOutput {
	return i.ToFckNatOutputWithContext(context.Background())
}

func (i *FckNat) ToFckNatOutputWithContext(ctx context.Context) FckNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FckNatOutput)
}

type FckNatOutput struct{ *pulumi.OutputState }

func (FckNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FckNat)(nil)).Elem()
}

func (o FckNatOutput) ToFckNatOutput() FckNatOutput {
	return o
}

func (o FckNatOutput) ToFckNatOutputWithContext(ctx context.Context) FckNatOutput {
	return o
}

func (o FckNatOutput) AutoScalingGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.AutoScalingGroupArn }).(pulumi.StringOutput)
}

func (o FckNatOutput) IamInstanceProfileArn() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.IamInstanceProfileArn }).(pulumi.StringOutput)
}

func (o FckNatOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.IamRoleArn }).(pulumi.StringOutput)
}

func (o FckNatOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

func (o FckNatOutput) NetworkInterfaceId() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.NetworkInterfaceId }).(pulumi.StringOutput)
}

func (o FckNatOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o FckNatOutput) PublicDns() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.PublicDns }).(pulumi.StringOutput)
}

func (o FckNatOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.PublicIp }).(pulumi.StringOutput)
}

func (o FckNatOutput) SecurityGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *FckNat) pulumi.StringOutput { return v.SecurityGroupId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FckNatInput)(nil)).Elem(), &FckNat{})
	pulumi.RegisterOutputType(FckNatOutput{})
}
